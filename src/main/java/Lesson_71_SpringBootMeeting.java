public class Lesson_71_SpringBootMeeting {
//    До сих пор при создании Spring приложения мы вручную указывали зависимости, определяли контест,
    // определяли бины для работы с базой данных и многое другое. При таком подходе мы не раз сталкивались
    // со множеством проблем. Например, у нас были подгружены библиотеки с несовместимыми
    // версиями и какое-то время у нас уходило на то, чтобы определить в чем причина неработающего
    // приложения. Однако программисты народ ленивый, было бы глупо думать, что не существует
    // инструмента для автоматизации этих процессов. Называется этот инструмент SpringBoot.
    // Spring Boot - это библиотека позволяющая создавать нам приложения из шаблона, подгружая
    // все необходимые зависимости и создавая первичную конфигурацию автоматически.
    // Есть несколько способов создать Spring Boot приложение. Первый из самой IDE, очень удобное
    // меню при создании приложения, мы сразу выбираем компоненты которые будут добавлены.
    // Например, при создании этого проекта мы сразу добавили Spring WEB, JPA и драйвера
    // MySQL. И все. Мы ничего дополнительно не настраивали, все что нам нужно сделать это прописать
    // адрес базы данных и логин с паролем для ее подключения. Всю конфигурацию и необходимые бины
    // SpringBoot создает автоматически.

    // Теперь немного разберемся в механике создание SpringBoot приложения.
    // Перейдя в pom файл мы увидим вместо привычных зависимостей подобные записи:
//        <dependency>
//            <groupId>org.springframework.boot</groupId>
//            <artifactId>spring-boot-starter-data-jpa</artifactId>
//        </dependency>
    // Добавляется одна зависимость spring-boot-starter-data-jpa, однако если мы откроем библиотеки maven
    // мы увидим, что в этом пакете содержатся все необходимые зависимости для работы с базами данных.
    // То же самое относится и к другим spring-boot-starter-ам.
    // Но конфигурация начинается с этой записи:
//    <parent>
//        <groupId>org.springframework.boot</groupId>
//        <artifactId>spring-boot-starter-parent</artifactId>
//        <version>2.7.3</version>
//        <relativePath/> <!-- lookup parent from repository -->
//    </parent>
    // Здесь указывается версия на основе которой будут подтягиваться те или иные версии
    // стартер паков.
    // Следующая особенность касается web-сервера. В прошлых проектах при компиляции нашей программы
    // мы упаковывали ее в war формат(web archive), который уже передавался в tomcat, мы даже
    // не могли запустить само приложение, только tomcat-сервер обрабатывающий этот архив.
    // Здесь же мы упаковываем все в jar, что позволяет создать нам исполняемое приложение,
    // запускаем это приложение и все. Давайте перейдем в main класс, он тоже создался автоматически
    // и у нас он называется Chapter6SpringBootApplication.
}
